<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:EDEngineer" xmlns:Custom="http://metro.mahapps.com/winfx/xaml/controls" xmlns:Custom1="http://metro.mahapps.com/winfx/xaml/shared">
    
    <Style x:Key="ToggleButtonStyle_ED" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" SnapsToDevicePixels="true" Background="#FFFF8700">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" OpacityMask="Black"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Background" TargetName="border" Value="#7FFF8700"/>
                            <Setter Property="OpacityMask" TargetName="contentPresenter" Value="Black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="ButtonStyle_ED" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource FlatButtonForegroundBrush}"/>
        <Setter Property="Background" Value="{DynamicResource FlatButtonBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="{DynamicResource FlatButtonFontSize}"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Background="#CCFF8700">
                        <Custom:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Custom:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="Black"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="#FFFF8700"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="DarkGray"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource FlatButtonPressedForegroundBrush}"/>
                <Setter Property="Background" Value="{DynamicResource FlatButtonPressedBackgroundBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource GrayBrush2}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TabControlStyle_ED" TargetType="{x:Type TabControl}">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="HeaderPanel" Grid.Column="0" IsItemsHost="True" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                        <Border x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentTemplate="{TemplateBinding SelectedContentTemplate}" Content="{TemplateBinding SelectedContent}" ContentStringFormat="{TemplateBinding SelectedContentStringFormat}" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ItemsControlStyle_ED" TargetType="{x:Type ItemsControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ItemsControl}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <ControlTemplate x:Key="MetroTabItemControlTemplate_ED" TargetType="{x:Type Custom:MetroTabItem}">
        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <StackPanel HorizontalAlignment="Stretch" Orientation="Vertical">
                <StackPanel Margin="{TemplateBinding Padding}" Orientation="Horizontal">
                    <Custom:ContentControlEx x:Name="ContentSite" ContentCharacterCasing="{Binding (Custom:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding Custom:ControlsHelper.HeaderFontWeight}" FontStretch="{TemplateBinding Custom:ControlsHelper.HeaderFontStretch}" FontSize="{TemplateBinding Custom:ControlsHelper.HeaderFontSize}" Margin="0,2,2,0" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    <Button x:Name="PART_CloseButton" Background="{DynamicResource GrayNormalBrush}" CommandParameter="{TemplateBinding CloseTabCommandParameter}" Command="{TemplateBinding}" HorizontalAlignment="Right" Height="{Binding Width, Mode=OneWay, RelativeSource={RelativeSource Self}}" IsTabStop="False" Margin="0,0,2,0" Style="{DynamicResource ChromelessButtonStyle}" Visibility="Collapsed" VerticalAlignment="Top">
                        <Button.Resources>
                            <Canvas x:Key="tabitem_close" Clip="F1M0,0L76,0 76,76 0,76 0,0" Height="76" Width="76">
                                <Path Data="F1M26.9166,22.1667L37.9999,33.25 49.0832,22.1668 53.8332,26.9168 42.7499,38 53.8332,49.0834 49.0833,53.8334 37.9999,42.75 26.9166,53.8334 22.1666,49.0833 33.25,38 22.1667,26.9167 26.9166,22.1667z" Fill="{DynamicResource BlackBrush}" Height="31.6667" Canvas.Left="22.1666" Stretch="Fill" Canvas.Top="22.1667" Width="31.6666"/>
                            </Canvas>
                        </Button.Resources>
                        <Button.OpacityMask>
                            <VisualBrush Stretch="Uniform">
                                <VisualBrush.Visual>
                                    <Canvas Clip="F1M0,0L76,0 76,76 0,76 0,0" Height="76" Width="76">
                                        <Path Data="F1M26.9166,22.1667L37.9999,33.25 49.0832,22.1668 53.8332,26.9168 42.7499,38 53.8332,49.0834 49.0833,53.8334 37.9999,42.75 26.9166,53.8334 22.1666,49.0833 33.25,38 22.1667,26.9167 26.9166,22.1667z" Fill="{DynamicResource BlackBrush}" Height="31.6667" Canvas.Left="22.1666" Stretch="Fill" Canvas.Top="22.1667" Width="31.6666"/>
                                    </Canvas>
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </Button.OpacityMask>
                        <Button.Width>
                            <TemplateBinding Property="Custom:ControlsHelper.HeaderFontSize">
                                <TemplateBinding.Converter>
                                    <Custom1:MetroTabItemCloseButtonWidthConverter/>
                                </TemplateBinding.Converter>
                            </TemplateBinding>
                        </Button.Width>
                    </Button>
                </StackPanel>
                <Rectangle x:Name="Underline" HorizontalAlignment="Stretch" Height="2" Margin="0,1,0,0">
                    <Rectangle.Visibility>
                        <Binding Path="(Custom:TabControlHelper.IsUnderlined)" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}">
                            <Binding.Converter>
                                <BooleanToVisibilityConverter/>
                            </Binding.Converter>
                        </Binding>
                    </Rectangle.Visibility>
                </Rectangle>
            </StackPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="CloseButtonEnabled" Value="True">
                <Setter Property="Visibility" TargetName="PART_CloseButton" Value="Hidden"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="CloseButtonEnabled" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" TargetName="PART_CloseButton" Value="Visible"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="CloseButtonEnabled" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" TargetName="PART_CloseButton" Value="Visible"/>
            </MultiTrigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" TargetName="ContentSite" Value="{DynamicResource AccentColorBrush}"/>
                <Setter Property="Fill" TargetName="Underline" Value="{DynamicResource AccentColorBrush}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="False">
                <Setter Property="Foreground" TargetName="ContentSite" Value="{DynamicResource GrayNormalBrush}"/>
                <Setter Property="Fill" TargetName="Underline" Value="{DynamicResource GrayNormalBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" SourceName="ContentSite" Value="True">
                <Setter Property="Foreground" TargetName="ContentSite" Value="{DynamicResource GrayHoverBrush}"/>
                <Setter Property="Background" TargetName="PART_CloseButton" Value="{DynamicResource GrayHoverBrush}"/>
                <Setter Property="Fill" TargetName="Underline" Value="{DynamicResource GrayHoverBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" SourceName="PART_CloseButton" Value="True">
                <Setter Property="Background" TargetName="PART_CloseButton" Value="{DynamicResource AccentColorBrush}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" SourceName="ContentSite" Value="True"/>
                    <Condition Property="IsSelected" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" TargetName="ContentSite" Value="{DynamicResource HighlightBrush}"/>
                <Setter Property="Fill" TargetName="Underline" Value="{DynamicResource HighlightBrush}"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="TabItemStyle_ED" TargetType="{x:Type TabItem}">
        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Custom:ControlsHelper.HeaderFontSize" Value="{DynamicResource TabItemFontSize}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="MinHeight" Value="5"/>
        <Setter Property="MinWidth" Value="5"/>
        <Setter Property="Padding" Value="6,2"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <DockPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <DockPanel.Resources>
                                <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
                            </DockPanel.Resources>
                            <Custom:ContentControlEx x:Name="ContentSite" ContentCharacterCasing="{Binding (Custom:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" DockPanel.Dock="Top" FontWeight="{TemplateBinding Custom:ControlsHelper.HeaderFontWeight}" FontStretch="{TemplateBinding Custom:ControlsHelper.HeaderFontStretch}" FontSize="{TemplateBinding Custom:ControlsHelper.HeaderFontSize}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Foreground="White"/>
                            <Rectangle x:Name="Underline" DockPanel.Dock="Bottom" HorizontalAlignment="Stretch" Height="2" Margin="0,1,0,0">
                                <Rectangle.Visibility>
                                    <Binding Path="(Custom:TabControlHelper.IsUnderlined)" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}">
                                        <Binding.Converter>
                                            <BooleanToVisibilityConverter/>
                                        </Binding.Converter>
                                    </Binding>
                                </Rectangle.Visibility>
                            </Rectangle>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="DockPanel.Dock" TargetName="ContentSite" Value="Left"/>
                            <Setter Property="DockPanel.Dock" TargetName="Underline" Value="Right"/>
                            <Setter Property="Height" TargetName="Underline" Value="Auto"/>
                            <Setter Property="Margin" TargetName="Underline" Value="1,0,0,0"/>
                            <Setter Property="Width" TargetName="Underline" Value="2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Top">
                            <Setter Property="DockPanel.Dock" TargetName="ContentSite" Value="Top"/>
                            <Setter Property="DockPanel.Dock" TargetName="Underline" Value="Bottom"/>
                            <Setter Property="DockPanel.Dock" TargetName="Underline" Value="Right"/>
                            <Setter Property="Height" TargetName="Underline" Value="2"/>
                            <Setter Property="Margin" TargetName="Underline" Value="0,1,0,0"/>
                            <Setter Property="Width" TargetName="Underline" Value="Auto"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="DockPanel.Dock" TargetName="ContentSite" Value="Right"/>
                            <Setter Property="DockPanel.Dock" TargetName="Underline" Value="Left"/>
                            <Setter Property="Height" TargetName="Underline" Value="Auto"/>
                            <Setter Property="Margin" TargetName="Underline" Value="0,0,1,0"/>
                            <Setter Property="Width" TargetName="Underline" Value="2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="DockPanel.Dock" TargetName="ContentSite" Value="Bottom"/>
                            <Setter Property="DockPanel.Dock" TargetName="Underline" Value="Top"/>
                            <Setter Property="Height" TargetName="Underline" Value="2"/>
                            <Setter Property="Margin" TargetName="Underline" Value="0,0,0,1"/>
                            <Setter Property="Width" TargetName="Underline" Value="Auto"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Fill" TargetName="Underline" Value="{DynamicResource AccentColorBrush}"/>
                            <Setter Property="Background" TargetName="ContentSite" Value="Black"/>
                            <Setter Property="Foreground" TargetName="ContentSite" Value="#FFFF8700"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Fill" TargetName="Underline" Value="{DynamicResource GrayNormalBrush}"/>
                            <Setter Property="Foreground" TargetName="ContentSite" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" SourceName="ContentSite" Value="True">
                            <Setter Property="Fill" TargetName="Underline" Value="{DynamicResource GrayHoverBrush}"/>
                            <Setter Property="Foreground" TargetName="ContentSite" Value="#FFFFA846"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" SourceName="ContentSite" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Fill" TargetName="Underline" Value="{DynamicResource HighlightBrush}"/>
                            <Setter Property="Foreground" TargetName="ContentSite" Value="#FFFF8700"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>